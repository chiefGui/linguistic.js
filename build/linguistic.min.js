/**
 * linguistic.js
 * A tiny, modular, dependency-free library to translate
 * your web application on demand using the DOM as reference.
 *
 * @author Guilherme Oderdenge <http://github.com/chiefGui>
 * @version 0.1.0
 * @license MIT
 * @year 2015
 */

!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):"object"==typeof exports?exports.linguistic=n():t.linguistic=n()}(this,function(){return function(t){function n(e){if(i[e])return i[e].exports;var r=i[e]={exports:{},id:e,loaded:!1};return t[e].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}var i={};return n.m=t,n.c=i,n.p="",n(0)}([function(t){"use strict";var n={interpret:function(t){return t?(this.clientLanguage=t,this):this},handle:function(t){this.handleLanguage();for(var n in t)n===this.clientLanguage&&this.setUsefulDictionary(t[n]);return this},translate:function(){for(var t in this.usefulDictionary)document.querySelector(t).innerHTML=this.getTranslation(t)},handleLanguage:function(){this.clientLanguage||(this.clientLanguage=navigator.language)},setUsefulDictionary:function(t){this.usefulDictionary=t},getTranslation:function(t){return"function"==typeof this.usefulDictionary[t]?this.usefulDictionary[t]():this.usefulDictionary[t]instanceof Array?this.parsePluralisation(this.usefulDictionary[t]):this.usefulDictionary[t]},parsePluralisation:function(t){if(t instanceof Array){{t.length}return this.isPlural(t[0])?t[3].replace("%s",t[0]):this.isSingular(t[0])?t[2]:t[1]}return console.error("Pluralisation is expecting an array."),!1},isSingular:function(t){return 1===t?!0:!1},isPlural:function(t){return t>1?!0:!1}};t.exports=n}])});
